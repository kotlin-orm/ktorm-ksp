package org.ktorm.ksp.compiler.generator

import com.google.devtools.ksp.processing.SymbolProcessorEnvironment
import com.squareup.kotlinpoet.FileSpec
import org.ktorm.ksp.spi.ExtCodeGenerator
import org.ktorm.ksp.spi.TableMetadata
import java.util.*

object FileGenerator {

    fun generate(table: TableMetadata, environment: SymbolProcessorEnvironment): FileSpec {
        val fileSpec = FileSpec.builder(table.entityClass.packageName.asString(), table.tableClassName)
            .addFileComment("Auto-generated by ktorm-ksp-compiler, DO NOT EDIT!")
            .indent("    ")
            .addType(TableClassGenerator.generate(table))

        for (generator in ServiceLoader.load(ExtCodeGenerator::class.java)) {
            // TODO: log generator info.

            for (type in generator.generateTypes(table, environment)) {
                // TODO: modify kdoc
                fileSpec.addType(type)
            }

            for (property in generator.generateProperties(table, environment)) {
                // TODO: modify kdoc
                fileSpec.addProperty(property)
            }

            for (function in generator.generateFunctions(table, environment)) {
                // TODO: modify kdoc
                fileSpec.addFunction(function)
            }
        }

        return fileSpec.build()
    }
}