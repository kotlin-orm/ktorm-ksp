/*
 * Copyright 2022-2023 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.ktorm.ksp.api

import org.ktorm.schema.SqlType
import kotlin.reflect.KClass

/**
 * Specifies the mapped column for an entity property. If no Column annotation is specified, the default values apply.
 */
@Target(AnnotationTarget.PROPERTY)
@Retention(AnnotationRetention.SOURCE)
public annotation class Column(

    /**
     * The name of the column.
     *
     * If not specified, the default name will be generated by a naming strategy, which by default generates snake-case
     * names.
     */
    val name: String = "",

    /**
     * The SQL type of the column.
     *
     * If not specified, the default SQL type will be automatically inferred by the annotated property's Kotlin type.
     * The specified class must be a Kotlin singleton object and typed of [SqlType] or [SqlTypeFactory].
     */
    val sqlType: KClass<*> = Nothing::class,

    /**
     * The name of the corresponding column property in the generated table object.
     *
     * If not specified, the default value will be the annotated property's name.
     */
    val propertyName: String = "",
)
